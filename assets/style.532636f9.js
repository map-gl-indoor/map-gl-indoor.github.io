(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const l of o)if(l.type==="childList")for(const a of l.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const l={};return o.integrity&&(l.integrity=o.integrity),o.referrerpolicy&&(l.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?l.credentials="include":o.crossorigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function i(o){if(o.ep)return;o.ep=!0;const l=t(o);fetch(o.href,l)}})();var K=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Y(r){var e=r.default;if(typeof e=="function"){var t=function(){return e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(r).forEach(function(i){var o=Object.getOwnPropertyDescriptor(r,i);Object.defineProperty(t,i,o.get?o:{enumerable:!0,get:function(){return r[i]}})}),t}class ${_map;_indoor;_indoorMap;_container;_levelsButtons;_selectedButton;constructor(){this._levelsButtons=[],this._selectedButton=null,this._indoorMap=null}onAdd(e){if(e.indoor===void 0)throw Error("call addIndoorTo(map) before creating the IndoorControl");this._map=e,this._indoor=this._map.indoor;const t=this._container=document.createElement("div");return t.classList.add("mapboxgl-ctrl"),t.classList.add("mapboxgl-ctrl-group"),t.style.display="none",t.addEventListener("contextmenu",this._onContextMenu),this._indoorMap=this._indoor.getSelectedMap(),this._indoor.getSelectedMap()!==null&&(this._updateNavigationBar(),this._setSelected(this._indoor.getLevel())),this._map.on("indoor.map.loaded",this._onMapLoaded),this._map.on("indoor.map.unloaded",this._onMapUnLoaded),this._map.on("indoor.level.changed",this._onLevelChanged),t}onRemove(){this._container?.removeEventListener("contextmenu",this._onContextMenu),this._container?.remove(),delete this._container,this._map?.off("indoor.map.loaded",this._onMapLoaded),this._map?.off("indoor.map.unloaded",this._onMapUnLoaded),this._map?.off("indoor.level.changed",this._onLevelChanged),delete this._map}_onMapLoaded=({indoorMap:e})=>{this._indoorMap=e,this._updateNavigationBar(),this._setSelected(this._indoor.getLevel())};_onMapUnLoaded=()=>{this._indoorMap=null,this._updateNavigationBar()};_onLevelChanged=({level:e})=>this._setSelected(e);_updateNavigationBar(){if(!this._container)return;if(this._indoorMap===null){this._container.style.display="none";return}for(this._container.style.display="block",this._levelsButtons=[];this._container.firstChild;)this._container.removeChild(this._container.firstChild);const e=this._indoorMap.levelsRange;for(let t=e.max;t>=e.min;t--)this._levelsButtons[t]=this._createLevelButton(this._container,t)}_setSelected(e){this._levelsButtons.length!==0&&(this._selectedButton&&(this._selectedButton.style.fontWeight="normal"),e!==null&&this._levelsButtons[e]&&(this._levelsButtons[e].style.fontWeight="bold",this._selectedButton=this._levelsButtons[e]))}_createLevelButton(e,t){const i=document.createElement("button");return i.innerHTML=t.toString(),i.classList.add("mapboxgl-ctrl-icon"),e.appendChild(i),i.addEventListener("click",()=>{this._map?.fire("indoor.control.clicked",{level:t}),this._indoor.getLevel()!==t&&this._indoor.setLevel(t)}),i}_onContextMenu(e){e.preventDefault()}}var f=63710088e-1,C={centimeters:f*100,centimetres:f*100,degrees:f/111325,feet:f*3.28084,inches:f*39.37,kilometers:f/1e3,kilometres:f/1e3,meters:f,metres:f,miles:f/1609.344,millimeters:f*1e3,millimetres:f*1e3,nauticalmiles:f/1852,radians:1,yards:f*1.0936};function R(r,e,t){t===void 0&&(t={});var i={type:"Feature"};return(t.id===0||t.id)&&(i.id=t.id),t.bbox&&(i.bbox=t.bbox),i.properties=e||{},i.geometry=r,i}function V(r,e,t){if(t===void 0&&(t={}),!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!x(r[0])||!x(r[1]))throw new Error("coordinates must contain numbers");var i={type:"Point",coordinates:r};return R(i,e,t)}function D(r,e){e===void 0&&(e="kilometers");var t=C[e];if(!t)throw new Error(e+" units is invalid");return r*t}function X(r,e){e===void 0&&(e="kilometers");var t=C[e];if(!t)throw new Error(e+" units is invalid");return r/t}function Z(r){var e=r%(2*Math.PI);return e*180/Math.PI}function v(r){var e=r%360;return e*Math.PI/180}function x(r){return!isNaN(r)&&r!==null&&!Array.isArray(r)}function F(r){if(!r)throw new Error("coord is required");if(!Array.isArray(r)){if(r.type==="Feature"&&r.geometry!==null&&r.geometry.type==="Point")return r.geometry.coordinates;if(r.type==="Point")return r.coordinates}if(Array.isArray(r)&&r.length>=2&&!Array.isArray(r[0])&&!Array.isArray(r[1]))return r;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function T(r,e,t){t===void 0&&(t={});var i=F(r),o=F(e),l=v(o[1]-i[1]),a=v(o[0]-i[0]),n=v(i[1]),s=v(o[1]),d=Math.pow(Math.sin(l/2),2)+Math.pow(Math.sin(a/2),2)*Math.cos(n)*Math.cos(s);return D(2*Math.atan2(Math.sqrt(d),Math.sqrt(1-d)),t.units)}function j(r,e){return!(r[0]>e[2]||e[0]>r[2]||r[3]<e[1]||e[3]<r[1])}function G(r,e,t=!1){return["all",r,["any",t?["!",["has","level"]]:!1,["all",["has","level"],["any",["==",["get","level"],e.toString()],["all",["!=",["index-of",";",["get","level"]],-1],[">=",e,["to-number",["slice",["get","level"],0,["index-of",";",["get","level"]]]]],["<=",e,["to-number",["slice",["get","level"],["+",["index-of",";",["get","level"]],1]]]]]]]]]}function E(r){const[e,t,i,o]=r;return[(e+i)/2,(t+o)/2]}function Q(r,e){const[t,i,o,l]=r,[a,n]=e,s=i<=n&&n<=l;let d=t<=a&&a<=o;return t>o&&(d=t>=a&&a>=o),s&&d}const k="indoor";class W{_map;_level;_indoorMaps;_selectedMap;_previousSelectedMap;_previousSelectedLevel;_savedFilters;_mapLoadedPromise;_updateMapPromise;constructor(e){this._map=e,this._level=null,this._indoorMaps=[],this._savedFilters=[],this._selectedMap=null,this._previousSelectedMap=null,this._previousSelectedLevel=null,this._updateMapPromise=Promise.resolve(),this._map.loaded()?this._mapLoadedPromise=Promise.resolve():this._mapLoadedPromise=new Promise(t=>this._map.on("load",t)),this._map.on("moveend",()=>this._updateSelectedMapIfNeeded())}getSelectedMap(){return this._selectedMap}getLevel(){return this._level}setLevel(e,t=!0){if(this._selectedMap===null)throw new Error("Cannot set level, no map has been selected");this._level=e,this._updateFiltering(),t&&this._map.fire("indoor.level.changed",{level:e})}_addLayerForFiltering(e,t){this._map.addLayer(e,t),this._savedFilters.push({layerId:e.id,filter:this._map.getFilter(e.id)||["all"]})}addLayerForFiltering(e,t){this._addLayerForFiltering(e,t),this._updateFiltering()}_removeLayerForFiltering(e){this._savedFilters=this._savedFilters.filter(({layerId:t})=>e!==t),this._map.removeLayer(e)}removeLayerForFiltering(e){this._removeLayerForFiltering(e),this._updateFiltering()}_updateFiltering(){const e=this._level;let t;if(e!==null){const i=this._selectedMap?this._selectedMap.showFeaturesWithEmptyLevel:!1;t=o=>G(o,e,i)}else t=i=>i;this._savedFilters.forEach(({layerId:i,filter:o})=>{this._map.setFilter(i,t(o))})}async addMap(e){this._indoorMaps.push(e),await this._updateSelectedMapIfNeeded()}async removeMap(e){this._indoorMaps=this._indoorMaps.filter(t=>t!==e),await this._updateSelectedMapIfNeeded()}async _updateSelectedMapIfNeeded(){await this._mapLoadedPromise,await this._updateMapPromise,this._updateMapPromise=(async()=>{const e=this._closestMap();e!==this._selectedMap&&this._updateSelectedMap(e)})(),await this._updateMapPromise}_updateSelectedMap(e){const t=this._selectedMap;if(t!==null&&(t.layersToHide.forEach(s=>this._map.setLayoutProperty(s,"visibility","visible")),t.layers.forEach(({id:s})=>this._removeLayerForFiltering(s)),this._map.removeSource(k),e||(this._previousSelectedLevel=this._level,this._previousSelectedMap=t),this.setLevel(null,!1),this._map.fire("indoor.map.unloaded",{indoorMap:t})),this._selectedMap=e,!e)return;const{geojson:i,layers:o,levelsRange:l,beforeLayerId:a}=e;this._map.addSource(k,{type:"geojson",data:i}),o.forEach(s=>this._addLayerForFiltering(s,a)),e.layersToHide.forEach(s=>this._map.setLayoutProperty(s,"visibility","none"));const n=this._previousSelectedMap===e?this._previousSelectedLevel:Math.max(Math.min(e.defaultLevel,l.max),l.min);this.setLevel(n,!1),this._map.fire("indoor.map.loaded",{indoorMap:e})}_closestMap(){if(this._map.getZoom()<17)return null;const e=this._map.getBounds(),t=[e.getWest(),e.getSouth(),e.getEast(),e.getNorth()],i=this._indoorMaps.filter(a=>j(a.bounds,t));if(i.length===0)return null;if(i.length===1)return i[0];let o=Number.POSITIVE_INFINITY,l=i[0];for(const a of i){const n=T(E(a.bounds),E(t));n<o&&(l=a,o=n)}return l}}const H=[{filter:["any",["has","building"],["has","building:part"]],id:"buildings-background",type:"fill",source:"indoor",paint:{"fill-color":"#E6E4E0","fill-opacity":{base:1,stops:[[16.5,0],[18,1]]}}},{filter:["filter-==","indoor","level"],id:"level-background",type:"fill",source:"indoor",paint:{"fill-color":"#E6E4E0","fill-opacity":{base:1,stops:[[16.5,0],[18,1]]}}},{id:"indoor-gardens",type:"fill",source:"indoor",filter:["filter-==","leisure","garden"],layout:{visibility:"visible"},paint:{"fill-color":"#cde8a2","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["filter-==","amenity","parking"],id:"indoor-parkings",type:"fill",source:"indoor",paint:{"fill-color":"#D7CCC8","fill-outline-color":"#000000","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["filter-==","amenity","parking"],id:"indoor-parkings-patterns",type:"fill",source:"indoor",paint:{"fill-opacity":{base:1,stops:[[17,0],[18,.1]]},"fill-pattern":"si-main-3","fill-translate-anchor":"viewport"}},{filter:["filter-==","indoor","corridor"],id:"indoor-corridors",type:"fill",source:"indoor",paint:{"fill-color":"#D7CCC8","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["any",["filter-in-small","indoor",["literal",["room","area"]]],["filter-==","railway","platform"]],id:"indoor-rooms",type:"fill",source:"indoor",paint:{"fill-color":"#A1887F","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["any",["filter-==","indoor","room"]],id:"indoor-rooms-borders",type:"line",source:"indoor",paint:{"line-color":"#000","line-width":1,"line-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["filter-==","indoor","area"],id:"indoor-areas",type:"fill",source:"indoor",paint:{"fill-color":"#D7CCC8","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["all",["filter-==","highway","pedestrian"],["has","level"]],id:"indoor-highways-area",type:"fill",source:"indoor",paint:{"fill-color":{base:1,stops:[[16,"hsl(230, 16%, 94%)"],[16.25,"hsl(230, 50%, 98%)"]]},"fill-outline-color":"hsl(230, 26%, 88%)","fill-opacity":1}},{filter:["all",["filter-==","highway","pedestrian"],["has","level"]],id:"indoor-highways-area-pattern",type:"fill",source:"indoor",paint:{"fill-color":"hsl(0, 0%, 100%)","fill-outline-color":"hsl(35, 10%, 83%)","fill-pattern":"pedestrian-polygon","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["all",["filter-==","indoor","area"],["filter-==","balcony","yes"]],id:"indoor-balcony",type:"fill",source:"indoor",paint:{"fill-color":"#BDBDBD","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["any",["filter-==","stairs","yes"],["filter-==","elevator","yes"],["filter-==","highway","elevator"]],id:"indoor-stairs",type:"fill",source:"indoor",paint:{"fill-color":"#7B635A","fill-outline-color":"#000000","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["filter-==","indoor","wall"],id:"indoor-walls",type:"line",source:"indoor",paint:{"line-color":"#000000","line-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["has","barrier"],id:"indoor-barriers",type:"line",source:"indoor",paint:{"line-color":"#000000","line-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["filter-==","indoor","block"],id:"indoor-blocks",type:"fill",source:"indoor",paint:{"fill-color":"#000000","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["filter-==","handrail","yes"],id:"indoor-handrail",type:"line",source:"indoor",paint:{"line-color":"#000000","line-opacity":{base:1,stops:[[17,0],[19,1]]}}},{filter:["filter-==","railway","rail"],id:"indoor-rails",type:"line",source:"indoor",paint:{"line-color":"hsl(230, 10%, 74%)","line-opacity":{base:1,stops:[[17,0],[19,1]]}}},{filter:["filter-==","railway","rail"],id:"indoor-rails-tracks",type:"line",source:"indoor",paint:{"line-color":"hsl(230, 10%, 74%)","line-opacity":{base:1,stops:[[17,0],[19,1]]},"line-width":{base:1.5,stops:[[14,4],[20,8]]},"line-dasharray":[.1,15]}},{filter:["any",["filter-in-small","indoor",["literal",["table","cupboard","chair","kitchen","sofa","tv","shelf","furniture-item"]]],["filter-==","trashcan","yes"],["filter-==","copier","yes"],["filter-==","amenity","vending_machine"]],id:"indoor-furniture",type:"fill",source:"indoor",paint:{"fill-color":"#000","fill-outline-color":"#000","fill-opacity":{base:1,stops:[[18,0],[19,.2]]}}},{id:"indoor-steps",paint:{"line-width":{base:1.5,stops:[[17,1],[18,1.6],[19,6]]},"line-color":"hsl(0, 0%, 100%)","line-dasharray":{base:1,stops:[[17,[1,0]],[17.5,[1.75,1]],[18,[1,.75]],[19,[.3,.3]]]},"line-opacity":{base:1,stops:[[17,0],[17.25,1]]}},type:"line",source:"indoor",filter:["all",["filter-==","highway","steps"],["!",["has","conveying"]]],layout:{"line-join":"round"}},{id:"indoor-conveying",paint:{"line-width":{base:1.5,stops:[[17,1],[18,1.6],[19,6]]},"line-color":"#FF0000","line-dasharray":{base:1,stops:[[17,[1,0]],[17.5,[1.75,1]],[18,[1,.75]],[19,[.3,.3]]]},"line-opacity":{base:1,stops:[[17,0],[17.25,1]]}},type:"line",source:"indoor",filter:["all",["filter-==","highway","steps"],["has","conveying"]],layout:{"line-join":"round"}},{interactive:!0,minzoom:17,layout:{"text-line-height":1.2,"text-size":{base:1,stops:[[17,10],[20,12]]},"text-allow-overlap":!1,"text-ignore-placement":!1,"text-max-angle":38,"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":2,visibility:"visible","text-rotation-alignment":"viewport","text-anchor":"center","text-field":"{name}","text-letter-spacing":.02,"text-max-width":8},filter:["filter-==","indoor","room"],type:"symbol",source:"indoor",id:"poi-indoor-text-ref",paint:{"text-color":"#65513d","text-halo-color":"#ffffff","text-halo-width":1,"text-opacity":{base:1,stops:[[18,0],[18.5,.5],[19,1]]}}},{interactive:!0,minzoom:17,layout:{"text-line-height":1.2,"icon-size":{base:1,stops:[[17,.5],[20,1]]},"text-size":{base:1,stops:[[17,11],[20,13]]},"text-allow-overlap":!1,"icon-image":"{maki}-15","icon-anchor":"center","text-ignore-placement":!1,"text-max-angle":38,"symbol-spacing":250,"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":2,visibility:"visible","text-offset":[0,1],"icon-optional":!1,"text-rotation-alignment":"viewport","text-anchor":"top","text-field":"{name}","text-letter-spacing":.02,"text-max-width":8,"icon-allow-overlap":!0},filter:["boolean",!1],type:"symbol",source:"indoor",id:"poi-indoor",paint:{"text-color":"#65513d","text-halo-color":"#ffffff","text-halo-width":1,"text-opacity":{base:1,stops:[[17,0],[17.5,.5],[19,1]]},"icon-opacity":{base:1,stops:[[17,0],[17.5,.5],[19,1]]}}}];let m=H;const B="poi-indoor",P=[{filter:["filter-==","amenity","fast_food"],maki:"fast-food"},{filter:["filter-==","amenity","restaurant"],maki:"restaurant"},{filter:["filter-==","amenity","cafe"],maki:"cafe"},{filter:["filter-in-small","amenity",["literal",["bank","vending_machine"]]],maki:"bank"},{filter:["filter-==","amenity","toilets"],maki:"toilet"},{filter:["any",["filter-==","highway","elevator"],["has","elevator"]],maki:"triangle-stroked"},{filter:["filter-==","natural","tree"],maki:"park"},{filter:["filter-==","shop","travel_agency"],maki:"suitcase"},{filter:["filter-==","shop","convenience"],maki:"grocery"},{filter:["filter-==","shop","bakery"],maki:"bakery"},{filter:["filter-==","shop","chemist"],maki:"pharmacy"},{filter:["filter-==","shop","clothes"],maki:"clothing-store"},{filter:["filter-==","highway","steps"],maki:"entrance"}];function U(r){const e={filter:["all",["has","shop"],["!",["filter-in-small","shop",["literal",P.filter(t=>t.filter[1]==="shop").map(t=>t.filter[2])]]]],maki:"shop"};return P.concat(e).map(t=>{const i=Object.assign({},r);return i.id+=`-${t.maki}`,i.filter=t.filter,i.layout=Object.assign({},r.layout),i.layout["icon-image"]=`${t.maki}-15`,i})}const S=m.find(r=>r.id===B);S&&(U(S).forEach(r=>m.push(r)),m=m.filter(r=>r.id!==B));const q=m,z={DefaultLayers:q};function N(r,e,t){if(r!==null)for(var i,o,l,a,n,s,d,_=0,p=0,g,M=r.type,w=M==="FeatureCollection",O=M==="Feature",I=w?r.features.length:1,u=0;u<I;u++){d=w?r.features[u].geometry:O?r.geometry:r,g=d?d.type==="GeometryCollection":!1,n=g?d.geometries.length:1;for(var b=0;b<n;b++){var c=0,y=0;if(a=g?d.geometries[b]:d,a!==null){s=a.coordinates;var h=a.type;switch(_=t&&(h==="Polygon"||h==="MultiPolygon")?1:0,h){case null:break;case"Point":if(e(s,p,u,c,y)===!1)return!1;p++,c++;break;case"LineString":case"MultiPoint":for(i=0;i<s.length;i++){if(e(s[i],p,u,c,y)===!1)return!1;p++,h==="MultiPoint"&&c++}h==="LineString"&&c++;break;case"Polygon":case"MultiLineString":for(i=0;i<s.length;i++){for(o=0;o<s[i].length-_;o++){if(e(s[i][o],p,u,c,y)===!1)return!1;p++}h==="MultiLineString"&&c++,h==="Polygon"&&y++}h==="Polygon"&&c++;break;case"MultiPolygon":for(i=0;i<s.length;i++){for(y=0,o=0;o<s[i].length;o++){for(l=0;l<s[i][o].length-_;l++){if(e(s[i][o][l],p,u,c,y)===!1)return!1;p++}y++}c++}break;case"GeometryCollection":for(i=0;i<a.geometries.length;i++)if(N(a.geometries[i],e,t)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function L(r){var e=[1/0,1/0,-1/0,-1/0];return N(r,function(t){e[0]>t[0]&&(e[0]=t[0]),e[1]>t[1]&&(e[1]=t[1]),e[2]<t[0]&&(e[2]=t[0]),e[3]<t[1]&&(e[3]=t[1])}),e}L.default=L;class J{static extractLevelFromFeature(e){if(!!e.properties&&e.properties.level!==null){const t=e.properties.level;if(typeof t=="string"){const i=t.split(";");if(i.length===1){const o=parseFloat(t);if(!isNaN(o))return o}else if(i.length===2){const o=parseFloat(i[0]),l=parseFloat(i[1]);if(!isNaN(o)&&!isNaN(l))return{min:Math.min(o,l),max:Math.max(o,l)}}}}return null}static extractLevelsRangeAndBounds(e){let t=1/0,i=-1/0;const o=L(e),l=a=>{const n=this.extractLevelFromFeature(a);n!==null&&(typeof n=="number"?(t=Math.min(t,n),i=Math.max(i,n)):typeof n=="object"&&(t=Math.min(t,n.min),i=Math.max(i,n.max)))};if(e.type==="FeatureCollection"&&e.features.forEach(l),t===1/0||i===-1/0)throw new Error("No level found");return{levelsRange:{min:t,max:i},bounds:o}}}class A{bounds;geojson;layers;levelsRange;beforeLayerId;layersToHide;defaultLevel;showFeaturesWithEmptyLevel;constructor(e,t,i,o,l,a,n,s){this.bounds=e,this.geojson=t,this.layers=i,this.levelsRange=o,this.layersToHide=l,this.defaultLevel=a,this.showFeaturesWithEmptyLevel=n,this.beforeLayerId=s}static fromGeojson(e,t={}){const{bounds:i,levelsRange:o}=J.extractLevelsRangeAndBounds(e);return new A(i,e,t.layers?t.layers:z.DefaultLayers,o,t.layersToHide?t.layersToHide:[],t.defaultLevel?t.defaultLevel:0,t.showFeaturesWithEmptyLevel?t.showFeaturesWithEmptyLevel:!1,t.beforeLayerId)}}function ee(r){return Object.defineProperty(r,"indoor",{get:function(){return this._indoor||(this._indoor=new W(this)),this._indoor}}),r}export{A as I,ee as a,$ as b,K as c,N as d,F as e,v as f,Y as g,Q as h,T as i,X as l,V as p,Z as r};
//# sourceMappingURL=style.532636f9.js.map
